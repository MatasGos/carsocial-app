[{"/home/mat/Desktop/carsocial-app/src/App.js":"1","/home/mat/Desktop/carsocial-app/src/index.js":"2","/home/mat/Desktop/carsocial-app/src/reportWebVitals.js":"3","/home/mat/Desktop/carsocial-app/src/Main.js":"4","/home/mat/Desktop/carsocial-app/src/Navbar.js":"5","/home/mat/Desktop/carsocial-app/src/Auth.js":"6","/home/mat/Desktop/carsocial-app/src/const.js":"7","/home/mat/Desktop/carsocial-app/src/test.js":"8","/home/mat/Desktop/carsocial-app/src/Login.js":"9","/home/mat/Desktop/carsocial-app/src/Signup.js":"10","/home/mat/Desktop/carsocial-app/src/Home.js":"11","/home/mat/Desktop/carsocial-app/src/404.js":"12","/home/mat/Desktop/carsocial-app/src/Users.js":"13","/home/mat/Desktop/carsocial-app/src/Auto.js":"14","/home/mat/Desktop/carsocial-app/src/Footer.js":"15"},{"size":1013,"mtime":1608419416678,"results":"16","hashOfConfig":"17"},{"size":441,"mtime":1608605248437,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1608418141635,"results":"19","hashOfConfig":"17"},{"size":3336,"mtime":1608606782142,"results":"20","hashOfConfig":"17"},{"size":3248,"mtime":1608605985227,"results":"21","hashOfConfig":"17"},{"size":659,"mtime":1608526141417,"results":"22","hashOfConfig":"17"},{"size":340,"mtime":1608588470378,"results":"23","hashOfConfig":"17"},{"size":1935,"mtime":1608482117314,"results":"24","hashOfConfig":"17"},{"size":4204,"mtime":1608604840636,"results":"25","hashOfConfig":"17"},{"size":4277,"mtime":1608604884156,"results":"26","hashOfConfig":"17"},{"size":16303,"mtime":1608603493959,"results":"27","hashOfConfig":"17"},{"size":192,"mtime":1608523366440,"results":"28","hashOfConfig":"17"},{"size":9764,"mtime":1608587810226,"results":"29","hashOfConfig":"17"},{"size":12249,"mtime":1608597215818,"results":"30","hashOfConfig":"17"},{"size":316,"mtime":1608605064822,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"143xfvg",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mat/Desktop/carsocial-app/src/App.js",[],"/home/mat/Desktop/carsocial-app/src/index.js",[],"/home/mat/Desktop/carsocial-app/src/reportWebVitals.js",[],"/home/mat/Desktop/carsocial-app/src/Main.js",["64","65","66","67","68"],"/home/mat/Desktop/carsocial-app/src/Navbar.js",["69","70","71","72","73","74"],"/home/mat/Desktop/carsocial-app/src/Auth.js",["75","76","77","78"],"/home/mat/Desktop/carsocial-app/src/const.js",[],"/home/mat/Desktop/carsocial-app/src/test.js",["79","80","81","82","83","84","85","86"],"/home/mat/Desktop/carsocial-app/src/Login.js",["87","88","89","90"],"/home/mat/Desktop/carsocial-app/src/Signup.js",["91","92","93","94","95","96"],"/home/mat/Desktop/carsocial-app/src/Home.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React from 'react';\nimport { Form, Button, Card , Modal} from 'react-bootstrap';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {Alert} from 'react-bootstrap';\nimport {API, LOCAL, NUMBER, TEXT} from './const'\nimport {login, setClient_id, UserRole} from './Auth'\nimport jwt_decode from \"jwt-decode\";\n\nclass CommentUnit extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleDel = this.handleDel.bind(this);\n    this.state = {id: this.props.id}\n  }\n  render(){\n    if(this.state.redirect){\n      this.props.forceUpdate(); \n      return(<Redirect to = {this.state.redirect}/>)\n    }\n    return(<Button size=\"sm\" variant=\"primary\" onClick={this.handleDel}>Ištrinti</Button>)\n  }\n\nasync handleDel()\n  {\n    let response = await fetch(LOCAL+\"comments/\"+this.state.id, {   \n        method: 'DELETE',\n        headers: {\n          'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n          'Content-Type': 'application/json'\n        },\n      });\n      //let body = await response.json();\n      if(response.status === 200){\n        this.setState({error: \"\"})\n        this.setState({redirect: \"/\"})\n      }else if (response.status === 400)\n      {\n        this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n      }else if (response.status === 404)\n      {\n        this.setState({error: \"Puslapis nerastas\", isLoading: false});\n      }else{\n        this.setState({error: \"Serverio klaida\", isLoading: false});\n      }  \n  }\n}\nclass CommentList extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {comments: this.props.comments}\n  }\n\n  render(){\n    let ret;\n    let test = []\n    \n    let i;\n    if (this.state.comments){\n    for (i = 0; i< this.state.comments.length; i++){\n      let canDelete = this.state.comments[i].fk_user == window.localStorage.getItem(\"id\") \n      || window.localStorage.getItem(\"role\") == \"admin\"\n      test.push(<><h4>\n        {this.state.comments[i].username}</h4>\n  <h6>{this.state.comments[i].text}</h6>{canDelete && \n  <CommentUnit id={this.state.comments[i].id} forceUpdate={this.props.forceUpdate}/>}</>)\n\n// test.push(<><Modal.Body>{this.state.comments[i].username}</Modal.Body>\n//   <Modal.Header>{this.state.comments[i].text}</Modal.Header></>)\n  }\n}\nreturn test\n}\n\n}\nclass PostUnit extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {post: this.props.post, show: false, error: null, redirect: null, car: \"\", cars: \"\",\n      text: \"\", comments: null, commentCount: false, showComment: false, commentText: \"\"\n    \n    }\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSaveComment = this.handleSaveComment.bind(this);\n    this.showComment = this.showComment.bind(this);\n    this.getCar()\n    this.getComments()\n    this.setState({commentCount: false});\n    if (this.state.comments != null){\n      if(this.state.comments.length > 0)\n        this.setState({commentCount: this.state.comments.length});\n    }\n    this.getCar()\n  }\n  render() \n  {\n    if(this.state.redirect){\n      this.props.forceUpdate(); \n      return(<Redirect to = {this.state.redirect}/>)\n    }\n    const canEdit = this.state.post.fkuser === window.localStorage.getItem(\"id\") || window.localStorage.getItem(\"role\") === \"admin\"\n\n    let modal = <Modal show={this.state.show} onHide={this.handleClick} >\n    <Modal.Header closeButton>\n      <Modal.Title>Redaguoti įrašą</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <Form>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n      <Form.Label>Redaguoti įrašą</Form.Label>\n      <Form.Control as=\"textarea\" rows={3} name=\"text\" value={this.state.text} maxLength=\"500\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      {this.state.error &&\n        <Alert variant='danger'>\n        {this.state.error}\n        </Alert>}\n      </Form>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={this.handleSave}>\n        Išsaugoti\n      </Button>\n    </Modal.Footer>\n  </Modal>\n\n   let modalShow\n   if(this.state.showComment){\n   modalShow = <Modal show={this.state.showComment} onHide={this.showComment} >\n    <Modal.Header closeButton>\n      <Modal.Title>Komentarai</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    {<CommentList comments={this.state.comments} forceUpdate={this.props.forceUpdate}/>}\n    </Modal.Body>\n    <Modal.Footer>\n      <Form>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\n        <Form.Label>Naujas Komentaras</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} name=\"commentText\" value={this.state.commentText} maxLength=\"500\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n        </Form.Group>\n        <Button variant=\"primary\" onClick={this.handleSaveComment}>\n        Išsaugoti\n      </Button>\n      </Form>\n      \n    </Modal.Footer>\n  </Modal>\n   }\n  \n    return(  \n    <Card\n    bg=\"light\"\n    text='dark'\n    style={{ width: '18rem' }}\n    className=\"mb-2 mt-4\"\n  >\n    <Card.Header>{this.state.car.manufacturer+\" \"+this.state.car.model+\" \"+this.state.car.color+\" \"+this.state.car.year}</Card.Header>\n    <Card.Body>\n    {this.state.error &&\n        <Alert variant='danger'>\n        {this.state.error}\n        </Alert>}\n    {this.state.car.text===null || this.state.car.text===\"\"\n     ? <></>\n     : <><Card.Text>{this.state.post.text}</Card.Text></>\n    }\n      {canEdit &&<Button variant=\"primary\" type=\"submit\" className=\"mr-2\" onClick={this.handleClick}>\n       Redaguoti\n      </Button>}\n      {canEdit &&<Button variant=\"primary\" type=\"submit\" onClick={this.handleDelete}>\n       Ištrinti\n      </Button>}\n    </Card.Body>\n    <Card.Footer>\n      <small className=\"text-muted\" onClick={this.showComment}>Komentarai: {this.state.comments !=null && <>{this.state.comments.length}</>}</small>\n    </Card.Footer>\n    {modal}\n    {modalShow}\n  </Card>\n  )}\n\n  async handleSaveComment()\n  {\n    const data = {\n      \"text\":this.state.commentText,\n      \"fk_post\":this.state.post.id\n    }\n    let response = await fetch(LOCAL+\"comments/\", {   \n        method: 'POST',\n        headers: {\n          'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      //let body = await response.json();\n      if(response.status === 200){\n        this.setState({error: \"\"})\n        this.setState({redirect: \"/\"})\n      }else if (response.status === 400)\n      {\n        this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n      }else if (response.status === 404)\n      {\n        this.setState({error: \"Puslapis nerastas\", isLoading: false});\n      }else{\n        this.setState({error: \"Serverio klaida\", isLoading: false});\n      }  \n  }\n  async handleDelete(){\n    let response = await fetch(LOCAL+\"posts/\"+this.state.post.id, {\n        method: 'DELETE',\n        //mode: 'no-cors',\n        headers: {\n          'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n          'Content-Type': 'application/json'\n        },\n      });\n      //let body = await response.json();\n      if(response.status === 200){\n        this.setState({error: \"\", redirect: \"/\", vin: this.state.car.vin, plate: this.state.car.plate, \n        color: this.state.car.color, manufacturer: this.state.car.manufacturer, model: this.state.car.model})\n        \n      }else if (response.status === 400)\n      {\n        this.setState({error: \"Negalimas veiksmas\", isLoading: false});\n      }else if (response.status === 404)\n      {\n        this.setState({error: \"Puslapis nerastas\", isLoading: false});\n      }else{\n        this.setState({error: \"Serverio klaida\", isLoading: false});\n      }  \n}\nasync handleSave(){\n  const data = {\n    \"text\":this.state.text\n  }\n  let response = await fetch(LOCAL+\"posts/\"+this.state.post.id, {   \n      method: 'PUT',\n      //mode: 'no-cors',\n      headers: {\n        'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    //let body = await response.json();\n    if(response.status === 200){\n      this.setState({error: \"\"})\n      this.setState({redirect: \"/\"})\n    }else if (response.status === 400)\n    {\n      this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n    }else if (response.status === 404)\n    {\n      this.setState({error: \"Puslapis nerastas\", isLoading: false});\n    }else{\n      this.setState({error: \"Serverio klaida\", isLoading: false});\n    }  \n}\nasync showComment(event){\n  if(this.state.showComment){\n    this.getComments()\n  }\n  this.setState({showComment: !this.state.showComment})\n}\nasync handleClick(event){\n  this.setState({text: this.state.post.text})\n  this.setState({show: !this.state.show})\n  this.setState({ error: \"\", vin: this.state.car.vin, plate: this.state.car.plate, \n  color: this.state.car.color, manufacturer: this.state.car.manufacturer, model: this.state.car.model})\n}\nhandleInputChange(event) {\n  const target = event.target;\n  const value = target.value;\n  const name = target.name;\n  this.setState({\n    [name]: value\n  });\n}\nasync getCar(){\n  let response = await fetch(LOCAL+\"cars/\"+this.state.post.fk_car , {\n    method: 'GET',\n    headers: {\n      'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n      'Content-Type': 'application/json'\n    }\n  });\n  if(response.status === 200){\n    let body = await response.json();\n    this.setState({error: \"\", car: body})\n  }else if (response.status === 404)\n  {\n    this.setState({error: \"Puslapis nerastas\", isLoading: false});\n    this.setState({redirect: \"/404\"})\n  }else{\n    this.setState({error: \"Serverio klaida\", isLoading: false});\n  }  \n}\nasync getComments(){\n  let response = await fetch(LOCAL+\"post/\"+this.state.post.id , {\n    method: 'GET',\n    headers: {\n      'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n      'Content-Type': 'application/json'\n    }\n  });\n  if(response.status === 200){\n    let body = await response.json();\n    this.setState({error: \"\", comments: body})\n  }else if (response.status === 404)\n  {\n    this.setState({error: \"Puslapis nerastas\", isLoading: false});\n    this.setState({redirect: \"/404\"})\n  }else{\n    this.setState({error: \"Serverio klaida\", isLoading: false});\n  }  \n}\n}\n\nclass CarsList extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {cars: this.props.cars}\n  }\n\n  render(){\n    let ret;\n    let test = []\n    let i;\n    if (!this.state.car){\n    for (i = 0; i< this.state.cars.length; i++){\n      test.push(<option key = {this.state.cars[i].id} value={this.state.cars[i].id}>\n        {this.state.cars[i].manufacturer+\" \"+this.state.cars[i].model+\" \"+this.state.cars[i].year+\" \"+\n      this.state.cars[i].color}</option>)\n  }\n}\nreturn test\n}\n}\n\n\nexport class HomeView extends React.Component {\n    constructor(props){\n        super(props)\n        \n        this.handleClick = this.handleClick.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = ({isLoggedIn : UserRole(), cars:null, user:\"\", car:null,\n        redirect: null, error: null, load: false, body: null, show: false\n      });\n      this.getCars()\n    }\n\n    render(){\n    if(this.state.redirect){\n      this.props.forceUpdate(); \n      return(<Redirect to = {this.state.redirect}/>)\n    }\n  \n    let post;\n    let form;\n    let modal\n      modal = \n      <Modal show={this.state.show} onHide={this.handleClick}>\n      <Modal.Header closeButton>\n        <Modal.Title>Redaguoti įrašą</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Naujas įrašas</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} name=\"text\" value={this.state.text} maxLength=\"500\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\" >\n        <Form.Label>Example select</Form.Label>\n        <Form.Control as=\"select\" name=\"car\" key={this.state.car} value={this.state.car} onChange={this.handleInputChange}>\n        {<CarsList cars={this.state.cars} forceUpdate={this.props.forceUpdate}/>}\n      </Form.Control>\n    </Form.Group>\n        {this.state.error &&\n          <Alert variant='danger'>\n          {this.state.error}\n          </Alert>}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={this.handleSave}>\n          Išsaugoti\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n    if(this.state.body){\n      let i;\n      form = []\n      if (UserRole()>0) {\n        post = <Button variant=\"secondary\" size=\"lg\" value=\"Reset\" size=\"small\" className=\"mt-2\" \n        onClick={this.handleClick}>Pridėti naują</Button>\n        }\n      for (i = 0; i< this.state.body.length; i++){\n        let unit = this.state.body[i] \n        form.push(<PostUnit post={this.state.body[i]} car={this.car} forceUpdate={this.props.forceUpdate}/>)\n      }\n    }\n\n      return (\n        \n        <div className=\"container\">\n        <div style={{\"margin\": \"0 auto\", \"display\": \"table\"}}>\n        {post}\n        {form}\n        {modal}\n        </div>\n        </div>\n      );\n    }\n    async handleClick(event){\n      if(!this.state.show){\n        this.getCars()\n      }\n      this.setState({show: !this.state.show, text: \"\"})\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n    \n        this.setState({\n          [name]: value\n        });\n      }\n    async componentDidMount(){\n          let response = await fetch(LOCAL+\"posts/\" , {\n            method: 'GET',\n            headers: {\n              'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n              'Content-Type': 'application/json'\n            }\n          });\n          if(response.status === 200){\n            let body = await response.json();\n            this.setState({error: \"\", body: body})\n          }else if (response.status === 404)\n          {\n            this.setState({error: \"Puslapis nerastas\", isLoading: false});\n            this.setState({redirect: \"/404\"})\n          }else{\n            this.setState({error: \"Serverio klaida\", isLoading: false});\n          }  \n      }\n      handleEdit\n      async handleSave(){\n        const data = {\n            \"fk_car\":0 ,\n            \"text\":this.state.text\n          }\n        let response = await fetch(LOCAL+\"posts/\", {\n            method: 'POST',\n            headers: {\n              'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n          });\n          if(response.status === 200){\n            this.setState({error: \"\"})\n            this.setState({redirect: \"/\"})\n          }else if (response.status === 400)\n          {\n            this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n          }else if (response.status === 404)\n          {\n            this.setState({error: \"Puslapis nerastas\", isLoading: false});\n          }else{\n            this.setState({error: \"Serverio klaida\", isLoading: false});\n          }  \n    }\n    async getCars(){\n      let response = await fetch(LOCAL+\"cars/\", {\n        method: 'GET',\n        headers: {\n          'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n          'Content-Type': 'application/json'\n        }\n      });\n      if(response.status === 200){\n        let body = await response.json();\n        this.setState({error: \"\", cars: body})\n      }else if (response.status === 404)\n      {\n        this.setState({error: \"Puslapis nerastas\", isLoading: false});\n        this.setState({redirect: \"/404\"})\n      }else{\n        this.setState({error: \"Serverio klaida\", isLoading: false});\n      }  \n    }\n    \n  }\n  \n  \n\n\n\n\n\n\n","/home/mat/Desktop/carsocial-app/src/404.js",[],"/home/mat/Desktop/carsocial-app/src/Users.js",["109","110","111","112","113"],"/home/mat/Desktop/carsocial-app/src/Auto.js",["114","115","116","117","118","119","120"],"import React from 'react';\nimport { Form, Button, Card , Modal} from 'react-bootstrap';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {Alert} from 'react-bootstrap';\nimport {API, LOCAL, NUMBER, TEXT} from './const'\nimport {login, setClient_id, UserRole} from './Auth'\nimport jwt_decode from \"jwt-decode\";\n\nclass CarUnit extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {car: this.props.car, show: false, error: null, redirect: null,\n      plate: \"\", vin: \"\", model: \"\", manufacturer: \"\", color: \"\"\n    \n    }\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  render() \n  {\n    if(this.state.redirect){\n      this.props.forceUpdate(); \n      return(<Redirect to = {this.state.redirect}/>)\n    }\n    const canEdit = this.state.car.fkuser === window.localStorage.getItem(\"id\") || window.localStorage.getItem(\"role\") === \"admin\"\n\n    let modal = <Modal show={this.state.show} onHide={this.handleClick}>\n    <Modal.Header closeButton>\n      <Modal.Title>Redaguoti profilį</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <Form>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Gamintojas</Form.Label>\n        <Form.Control type=\"text\" name=\"manufacturer\" value={this.state.manufacturer} maxLength=\"20\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Modelis</Form.Label>\n        <Form.Control type=\"text\" name=\"model\" value={this.state.model} maxLength=\"20\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>VIN</Form.Label>\n        <Form.Control type=\"text\" name=\"vin\" value={this.state.vin} maxLength=\"50\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Registruoti numeriai</Form.Label>\n        <Form.Control type=\"text\" name=\"plate\" value={this.state.plate} maxLength=\"10\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Spalva</Form.Label>\n        <Form.Control type=\"text\" name=\"color\" value={this.state.color} maxLength=\"12\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      {this.state.error &&\n        <Alert variant='danger'>\n        {this.state.error}\n        </Alert>}\n      </Form>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={this.handleSave}>\n        Išsaugoti\n      </Button>\n    </Modal.Footer>\n  </Modal>\n    \n    \n    return(  \n    <Card\n    bg=\"light\"\n    text='dark'\n    style={{ width: '18rem' }}\n    className=\"mb-2 mt-4\"\n  >\n    <Card.Header>{this.state.car.manufacturer+\" \"+this.state.car.model}</Card.Header>\n    <Card.Body>\n    {this.state.error &&\n        <Alert variant='danger'>\n        {this.state.error}\n        </Alert>}\n    {this.state.car.color===null || this.state.car.color===\"\"\n     ? <></>\n     : <><Card.Title>Spalva</Card.Title><Card.Text>{this.state.car.color}</Card.Text></>\n    }\n    {this.state.car.year===null || this.state.car.year===\"\"\n     ? <></>\n     : <><Card.Title>Metai</Card.Title><Card.Text>{this.state.car.year}</Card.Text></>\n    }\n    {this.state.car.plate===null || this.state.car.plate===\"\"\n     ? <></>\n     : <><Card.Title>Numeris</Card.Title><Card.Text>{this.state.car.plate}</Card.Text></>\n    }\n      {canEdit &&<Button variant=\"primary\" type=\"submit\" className=\"mr-2\" onClick={this.handleClick}>\n       Redaguoti\n      </Button>}\n      {canEdit &&<Button variant=\"primary\" type=\"submit\" onClick={this.handleDelete}>\n       Ištrinti\n      </Button>}\n    </Card.Body>\n    {modal}\n  </Card>\n  )}\n  async handleDelete(){\n    let response = await fetch(LOCAL+\"cars/\"+this.state.car.id, {\n        method: 'DELETE',\n        //mode: 'no-cors',\n        headers: {\n          'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n          'Content-Type': 'application/json'\n        },\n      });\n      //let body = await response.json();\n      if(response.status === 200){\n        this.setState({error: \"\", redirect: \"/auto\", vin: this.state.car.vin, plate: this.state.car.plate, \n        color: this.state.car.color, manufacturer: this.state.car.manufacturer, model: this.state.car.model})\n        this.setState({redirect: \"/auto\"})\n        \n      }else if (response.status === 400)\n      {\n        this.setState({error: \"Negalimas veiksmas\", isLoading: false});\n      }else if (response.status === 404)\n      {\n        this.setState({error: \"Puslapis nerastas\", isLoading: false});\n      }else{\n        this.setState({error: \"Serverio klaida\", isLoading: false});\n      }  \n}\nasync handleSave(){\n  const data = {\n    \"model\":this.state.model,\n    \"manufacturer\":this.state.manufacturer,\n    \"vin\":this.state.vin,\n    \"plate\":this.state.plate,\n    \"color\":this.state.color\n  }\n  let response = await fetch(LOCAL+\"cars/\"+this.state.car.id, {   \n      method: 'PUT',\n      //mode: 'no-cors',\n      headers: {\n        'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    //let body = await response.json();\n    if(response.status === 200){\n      this.setState({error: \"\"})\n      this.setState({redirect: \"/auto\"})\n    }else if (response.status === 400)\n    {\n      this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n    }else if (response.status === 404)\n    {\n      this.setState({error: \"Puslapis nerastas\", isLoading: false});\n    }else{\n      this.setState({error: \"Serverio klaida\", isLoading: false});\n    }  \n}\nasync handleClick(event){\n  this.setState({show: !this.state.show})\n  this.setState({ error: \"\", vin: this.state.car.vin, plate: this.state.car.plate, \n  color: this.state.car.color, manufacturer: this.state.car.manufacturer, model: this.state.car.model})\n}\nhandleInputChange(event) {\n  const target = event.target;\n  const value = target.value;\n  const name = target.name;\n\n  this.setState({\n    [name]: value\n  });\n}\n}\n\nexport class CarsView extends React.Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = ({isLoggedIn : UserRole(), model:\"\", manufacturer:\"\", year:\"\", vin:\"\", color:\"\", plate:\"\",\n        redirect: null, error: null, lol: \"\", load: false, body: null, show: false\n      });\n    }\n\n    render(){\n    if(this.state.redirect){\n      this.props.forceUpdate(); \n      return(<Redirect to = {this.state.redirect}/>)\n    }\n    \n    //{this.state.body.username}\n    let post;\n    let form;\n    let modal = \n    <Modal show={this.state.show} onHide={this.handleClick}>\n    <Modal.Header closeButton>\n      <Modal.Title>Prideti automobili</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n    <Form>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Gamintojas</Form.Label>\n        <Form.Control type=\"text\" name=\"manufacturer\" value={this.state.manufacturer} maxLength=\"20\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Modelis</Form.Label>\n        <Form.Control type=\"text\" name=\"model\" value={this.state.model} maxLength=\"20\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>VIN</Form.Label>\n        <Form.Control type=\"text\" name=\"vin\" value={this.state.vin} maxLength=\"50\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Registruoti numeriai</Form.Label>\n        <Form.Control type=\"text\" name=\"plate\" value={this.state.plate} maxLength=\"10\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Spalva</Form.Label>\n        <Form.Control type=\"text\" name=\"color\" value={this.state.color} maxLength=\"12\" pattern={TEXT} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Metai</Form.Label>\n        <Form.Control type=\"number\" name=\"year\" value={this.state.year} maxLength=\"4\" pattern={NUMBER} title=\"Netinkami simboliai\" onChange={this.handleInputChange}/> \n      </Form.Group>\n      {this.state.error &&\n        <Alert variant='danger'>\n        {this.state.error}\n        </Alert>}\n      </Form>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"primary\" onClick={this.handleSave}>\n        Išsaugoti\n      </Button>\n    </Modal.Footer>\n  </Modal>;\n    if(this.state.body){\n      let i;\n      form = []\n      if (UserRole()>0) {\n      post = <Button variant=\"secondary\" size=\"lg\" value=\"Reset\" size=\"small\" className=\"mt-2\" \n      onClick={this.handleClick}>Pridėti naują</Button>\n      }\n      for (i = 0; i< this.state.body.length; i++){\n      let unit = this.state.body[i] \n      form.push(<CarUnit car={this.state.body[i]} forceUpdate={this.props.forceUpdate}/>)\n      }\n    }\n\n      return (\n        \n        <div className=\"container\">\n        <div style={{\"margin\": \"0 auto\", \"display\": \"table\"}}>\n        {post}\n        {form}\n        {modal}\n        </div>\n        </div>\n      );\n    }\n    async handleClick(event){\n      this.setState({show: !this.state.show})\n    }\n    handleInputChange(event) {\n      \n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n      }\n    async componentDidMount(){\n          let response = await fetch(LOCAL+\"cars/\" , {\n            method: 'GET',\n            headers: {\n              'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n              'Content-Type': 'application/json'\n            }\n          });\n          if(response.status === 200){\n            let body = await response.json();\n            this.setState({error: \"\", body: body})\n          }else if (response.status === 404)\n          {\n            this.setState({error: \"Puslapis nerastas\", isLoading: false});\n            this.setState({redirect: \"/404\"})\n          }else{\n            this.setState({error: \"Serverio klaida\", isLoading: false});\n          }  \n      }\n      handleEdit\n      async handleSave(){\n        const data = {\n            \"manufacturer\":this.state.manufacturer,\n            \"model\":this.state.model,\n            \"vin\":this.state.vin,\n            \"plate\":this.state.plate,\n            \"year\":this.state.year,\n            \"color\":this.state.color\n          }\n        let response = await fetch(LOCAL+\"cars/\", {\n            method: 'POST',\n            headers: {\n              'Authorization': 'BEARER '+ window.localStorage.getItem(\"token\"),\n              'Content-Type': 'application/json'\n            },\n            body: \"[\"+JSON.stringify(data)+\"]\" // body data type must match \"Content-Type\" header\n          });\n          if(response.status === 200){\n            this.setState({error: \"\"})\n            this.setState({redirect: \"/auto\"})\n          }else if (response.status === 400)\n          {\n            this.setState({error: \"Klaidingi duomenys\", isLoading: false});\n          }else if (response.status === 404)\n          {\n            this.setState({error: \"Puslapis nerastas\", isLoading: false});\n          }else{\n            this.setState({error: \"Serverio klaida\", isLoading: false});\n          }  \n    }\n    \n  }\n  \n  \n\n\n\n\n\n","/home/mat/Desktop/carsocial-app/src/Footer.js",[],{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"127","line":15,"column":22,"nodeType":"123","messageId":"124","endLine":15,"endColumn":28},{"ruleId":"121","severity":1,"message":"128","line":18,"column":5,"nodeType":"123","messageId":"124","endLine":18,"endColumn":9},{"ruleId":"121","severity":1,"message":"129","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":12},{"ruleId":"121","severity":1,"message":"130","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":19},{"ruleId":"121","severity":1,"message":"127","line":11,"column":20,"nodeType":"123","messageId":"124","endLine":11,"endColumn":26},{"ruleId":"121","severity":1,"message":"131","line":12,"column":3,"nodeType":"123","messageId":"124","endLine":12,"endColumn":9},{"ruleId":"121","severity":1,"message":"132","line":13,"column":3,"nodeType":"123","messageId":"124","endLine":13,"endColumn":8},{"ruleId":"121","severity":1,"message":"133","line":15,"column":3,"nodeType":"123","messageId":"124","endLine":15,"endColumn":11},{"ruleId":"121","severity":1,"message":"134","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"133","line":3,"column":5,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"135","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"136","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"137","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"138","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":11},{"ruleId":"121","severity":1,"message":"139","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":19},{"ruleId":"121","severity":1,"message":"129","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":12},{"ruleId":"121","severity":1,"message":"130","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":19},{"ruleId":"121","severity":1,"message":"140","line":9,"column":9,"nodeType":"123","messageId":"124","endLine":9,"endColumn":19},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"141","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"142","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"143","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"136","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"141","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"142","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"135","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"144","line":5,"column":21,"nodeType":"123","messageId":"124","endLine":5,"endColumn":27},{"ruleId":"121","severity":1,"message":"141","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"142","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"135","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"145","line":54,"column":9,"nodeType":"123","messageId":"124","endLine":54,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":60,"column":54,"nodeType":"148","messageId":"149","endLine":60,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":61,"column":46,"nodeType":"148","messageId":"149","endLine":61,"endColumn":48},{"ruleId":"121","severity":1,"message":"145","line":330,"column":9,"nodeType":"123","messageId":"124","endLine":330,"endColumn":12},{"ruleId":"150","severity":1,"message":"151","line":401,"column":68,"nodeType":"152","endLine":401,"endColumn":80},{"ruleId":"121","severity":1,"message":"153","line":405,"column":13,"nodeType":"123","messageId":"124","endLine":405,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"141","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"142","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"135","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":12},{"ruleId":"121","severity":1,"message":"141","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"142","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"135","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":243,"column":66,"nodeType":"152","endLine":243,"endColumn":78},{"ruleId":"121","severity":1,"message":"153","line":247,"column":11,"nodeType":"123","messageId":"124","endLine":247,"endColumn":15},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'React' is defined but never used.","'jwt_decode' is defined but never used.","'API' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'isLoggedIn' is defined but never used.","'login' is defined but never used.","'setClient_id' is defined but never used.","'Alert' is defined but never used.","'NUMBER' is defined but never used.","'ret' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'unit' is assigned a value but never used."]